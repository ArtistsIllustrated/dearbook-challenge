x-php: &php
  build:
    context: docker/php
    dockerfile: php.dockerfile
    args:
      ENVIRONMENT: development
  restart: unless-stopped
  working_dir: /srv
  volumes:
    - .:/srv
    - ~/.composer:/home/composer/.cache/composer
    - ~/.composer/auth.json:/config/composer/auth.json
    - ./vendor:/srv/vendor:delegated

services:

  traefik:
    image: traefik:v3.2
    restart: unless-stopped
    command: >-
      --entryPoints.web.address=:80
      --entryPoints.web.http.redirections.entrypoint.to=web-secure
      --entryPoints.web.http.redirections.entrypoint.scheme=https
      --entryPoints.web-secure.address=:443
      --api=true
      --api.dashboard=true
      --providers.docker=true
      --providers.docker.exposedByDefault=false
      --providers.file.directory=/srv/configs
      --providers.file.watch=true
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik:/srv
    labels:
      - traefik.enable=true
      - traefik.http.routers.traefik.rule=Host(`traefik.docker.localhost`)
      - traefik.http.routers.traefik.service=api@internal
      - traefik.http.routers.traefik.tls=true
      - traefik.http.services.traefik.loadBalancer.server.port=8080

  php:
    <<: *php
    labels:
      - traefik.enable=true
      - traefik.http.routers.php.entryPoints=web-secure
      - traefik.http.routers.php.rule=Host(`app.docker.localhost`)
      - traefik.http.routers.php.tls=true

  queue:
    <<: *php
    command: php artisan horizon

  redis:
    image: redis:7-alpine
    restart: unless-stopped
    volumes:
      - redis-data:/data

  ollama:
    image: ollama/ollama
    ports:
      - "11434:11434"
    volumes:
      - .ollama:/root/.ollama

  timescaledb:
    image: timescale/timescaledb-ha:pg16
    environment:
      POSTGRES_DB: $DB_DATABASE
      POSTGRES_USER: $DB_USERNAME
      POSTGRES_PASSWORD: $DB_PASSWORD
    volumes:
      - postgres-data:/home/postgres/pgdata/data
    ports:
      - ${DB_PORT}:5432

  comfy:
    image: yanwk/comfyui-boot:rocm
    ports:
      - "8188:8188"
    runtime: amd
    volumes:
      - .comfy:/home/runner

#  open-webui:
#    image: ghcr.io/open-webui/open-webui:main
#    volumes:
#      - open-webui:/app/backend/data
#    depends_on:
#      - ollama
#    ports:
#      - "8080:8080"
#    environment:
#      - 'OLLAMA_BASE_URL=http://ollama:11434'
#      - 'WEBUI_SECRET_KEY='


volumes:
  redis-data:
  postgres-data:
  open-webui:
